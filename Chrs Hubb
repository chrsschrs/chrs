--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.5b) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then v18=v0(v3(v29,1,1));return "";else local v62=v2(v0(v29,16));if v18 then local v75=v5(v62,v18);v18=nil;return v75;else return v62;end end end);local function v19(v30,v31,v32)if v32 then local v63=(v30/(2^(v31-1)))%((5 -3)^(((v32-(1 + 0 + 0)) -(v31-1)) + (3 -2)));return v63-(v63%(1 + 0));else local v64=0 + 0;local v65;while true do if (v64==(0 + 0)) then v65=(2 -0)^(v31-(507 -(222 + 284)));return (((v30%(v65 + v65))>=v65) and 1) or ((546 -(279 + 267)) -0);end end end end local function v20()local v37=v1(v15,v17,v17);v17=v17 + 1;return v37;end local function v21()local v38,v39=v1(v15,v17,v17 + (5 -3));v17=v17 + 1 + 1;return (v39 * (354 -(28 + 70))) + v38;end local function v22()local v40=0 + 0 + 0;local v41;local v42;local v43;local v44;while true do if (v40==(208 -(187 + 21))) then v41,v42,v43,v44=v1(v15,v17,v17 + 2 + 1);v17=v17 + (8 -4);v40=(1 -0) -(0 -0);end if (v40==(1871 -(1769 + 101))) then return (v44 * (15098100 + 1679116)) + (v43 * 65536) + (v42 * (82 + 174)) + v41;end end end local function v23()local v45=v22();local v46=v22();return (( -((3956 -2879) -(657 + 418)) * v19(v46,1618 -(9 + 1577))) + (884 -(581 + 302))) * (2^(v19(v46,21 + 0,21 + 10) -(221 + 802))) * ((((v19(v46,1,71 -51) * ((3 -1)^((102 -51) -19))) + v45)/((3 -1)^52)) + ((578 -(276 + 301)) -0));end local function v24(v33)local v47;if  not v33 then local v66=0 -0;while true do if (v66==0) then v33=v22();if (v33==(0 + 0)) then return "";end break;end end end v47=v3(v15,v17,(v17 + v33) -((976 -(448 + 527)) + 0));v17=v17 + v33;local v48={};for v60=1, #v47 do v48[v60]=v2(v1(v3(v47,v60,v60)));end return v6(v48);end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v49=0;local v50;local v51;local v52;local v53;local v54;local v55;local v56;while true do if (v49==(2 + 0)) then local v73=0;while true do if (v73==(0 + 0)) then v54=nil;v55=nil;v73=1;end if (v73~=(1 + 0)) then else v49=10 -7;break;end end end if (v49==(0 -0)) then local v74=0;while true do if (v74==1) then v49=3 -2;break;end if (v74==0) then v50=0 -0;v51=nil;v74=1 -0;end end end if (v49==1) then v52=nil;v53=nil;v49=2 + 0;end if (v49==(3 + 0)) then v56=nil;while true do if (v50==0) then local v76=1763 -(1119 + 644);local v77;while true do if (v76~=0) then else v77=0;while true do if (v77~=(2 -0)) then else v50=1 + 0;break;end if (v77==(917 -(254 + 662))) then v53={};v54={v51,v52,nil,v53};v77=2;end if (v77~=(0 -0)) then else local v105=0 + 0;while true do if (v105==(1898 -(522 + 1376))) then v51={};v52={};v105=1532 -(347 + 1184);end if ((1 + 0)==v105) then v77=1;break;end end end end break;end end end if (v50~=1) then else v55=v22();v56={};for v81=1,v55 do local v82=976 -(539 + 437);local v83;local v84;local v85;local v86;while true do if (v82~=1) then else v85=nil;v86=nil;v82=2;end if (2==v82) then while true do if (v83==1) then v86=nil;while true do if (v84==(0 + 0)) then local v107=0;local v108;while true do if (v107==(0 -0)) then v108=0;while true do if (v108~=(1003 -(602 + 401))) then else v85=v20();v86=nil;v108=1 -0;end if (v108==(3 -2)) then v84=1;break;end end break;end end end if (v84==(1 -0)) then if (v85==1) then v86=v20()~=0;elseif (v85==(1 + 1)) then v86=v23();elseif (v85==(5 -2)) then v86=v24();end v56[v81]=v86;break;end end break;end if (v83==0) then local v106=0 -0;while true do if (v106==0) then v84=1046 -(855 + 191);v85=nil;v106=1 + 0;end if (v106==1) then v83=1784 -(861 + 922);break;end end end end break;end if (v82~=(0 -0)) then else v83=0;v84=nil;v82=529 -(186 + 342);end end end v54[1 + 2]=v20();v50=2;end if (v50==(464 -(306 + 156))) then local v79=0;local v80;while true do if (v79==0) then v80=0;while true do local v101=0;while true do if (v101==(0 -0)) then if (v80==(1 + 0)) then for v110=1,v22() do v53[v110]=v22();end return v54;end if (v80==(0 + 0)) then for v112=2 -1,v22() do local v113=139 -(131 + 8);local v114;local v115;while true do if (v113==(1 + 0)) then while true do if (v114==0) then v115=v20();if (v19(v115,1 + 0,1)==(0 -0)) then local v147=0;local v148;local v149;local v150;local v151;while true do if (v147==(0 -0)) then v148=0;v149=nil;v147=1;end if (v147~=1) then else local v164=0;while true do if (v164==0) then v150=nil;v151=nil;v164=1 + 0;end if (v164~=1) then else v147=2;break;end end end if (v147~=2) then else while true do if ((1 -0)~=v148) then else local v166=392 -(171 + 221);local v167;local v168;while true do if (v166~=1) then else while true do if (v167~=0) then else v168=0 + 0;while true do if (v168~=(0 -0)) then else local v179=1429 -(887 + 542);while true do if (v179==(1 + 0)) then v168=1;break;end if (v179==0) then v151={v21(),v21(),nil,nil};if (v149==(0 -0)) then local v182=0;local v183;while true do if (v182==0) then v183=0;while true do if ((239 -(199 + 40))~=v183) then else v151[3]=v21();v151[4 + 0]=v21();break;end end break;end end elseif (v149==1) then v151[3]=v22();elseif (v149==(7 -5)) then v151[1804 -(814 + 987)]=v22() -((1927 -(1319 + 606))^(1709 -(430 + 1263)));elseif (v149==(1106 -(58 + 1045))) then local v190=659 -(303 + 356);local v191;local v192;while true do if (v190==0) then v191=0;v192=nil;v190=1;end if (v190~=(1 + 0)) then else while true do if (v191~=(702 -(168 + 534))) then else v192=0 + 0;while true do if ((736 -(474 + 262))~=v192) then else v151[3]=v22() -(2^(52 -36));v151[10 -6]=v21();break;end end break;end end break;end end end v179=1;end end end if (v168==(97 -(18 + 78))) then v148=2;break;end end break;end end break;end if (0==v166) then v167=1547 -(570 + 977);v168=nil;v166=1;end end end if ((8 -5)==v148) then if (v19(v150,5 -2,3)==1) then v151[1125 -(87 + 1034)]=v56[v151[15 -11]];end v51[v112]=v151;break;end if (v148~=(667 -(222 + 445))) then else local v170=0 + 0;local v171;while true do if (v170==(1973 -(423 + 1550))) then v171=0;while true do if (v171==0) then local v178=0 + 0;while true do if (v178==1) then v171=1;break;end if (v178~=0) then else v149=v19(v115,2,3);v150=v19(v115,4,6 + 0);v178=1497 -(435 + 1061);end end end if (v171~=1) then else v148=1;break;end end break;end end end if (v148==2) then local v172=0;local v173;local v174;while true do if (v172==0) then v173=0 -0;v174=nil;v172=1;end if (v172==(1266 -(293 + 972))) then while true do if (v173~=0) then else v174=0;while true do if (v174==0) then local v180=1991 -(233 + 1758);while true do if (v180~=(2 -1)) then else v174=1;break;end if (v180~=(0 + 0)) then else local v181=0;while true do if (v181~=(1 + 0)) then else v180=1 + 0;break;end if (v181==0) then if (v19(v150,1,1 + 0)~=(3 -2)) then else v151[1130 -(267 + 861)]=v56[v151[655 -(102 + 551)]];end if (v19(v150,3 -1,3 -1)~=(1 + 0)) then else v151[2 + 1]=v56[v151[3]];end v181=1;end end end end end if (v174==(1294 -(1265 + 28))) then v148=2 + 1;break;end end break;end end break;end end end end break;end end end break;end end break;end if (v113==0) then v114=0 + 0;v115=nil;v113=1;end end end for v116=1,v22() do v52[v116-(2 -1)]=v27();end v80=2 -1;end break;end end end break;end end end end break;end end end local function v28(v34,v35,v36)local v57=v34[1];local v58=v34[2];local v59=v34[3];return function(...)local v67=0;local v68;local v69;local v70;local v71;local v72;while true do if (v67==1) then v70={...};v71=v11("#",...) -1;v67=2;end if (v67==0) then v68=1;v69= -1;v67=1;end if (v67==2) then v72=nil;function v72()local v87=v57;local v88=Const;local v89=v58;local v90=v59;local v91=v26;local v92={};local v93={};local v94={};for v99=0 + 0,v71 do if ((v99>=v90) or ((7024 -3580)<((2565 -1645) -(480 + 194)))) then v92[v99-v90]=v70[v99 + 1 + 0];else v94[v99]=v70[v99 + 1 + 0];end end local v95=(v71-v90) + ((1724 -886) -(310 + 527));local v96;local v97;while true do local v100=0 + 0;while true do if ((v100==((7 -3) -(3 + 0))) or (2349<(25 + 566))) then if (((4813 -(1070 + 448))>2358) and (v97<=((8 -4) + 3))) then if (((953 + 1357)>(578 + 406)) and (v97<=(892 -(336 + 418 + 135)))) then if ((v97<=(3 -2)) or ((1513 -(10 + 52))>=(5957 -(1076 + 25)))) then if (((124 + 617)<=(4785 -(11 + 27))) and (v97>(0 + 0))) then local v118=1319 -(831 + 488);local v119;while true do if ((v118==0) or ((5964 -2406)<=(7467 -4890))) then v119=v96[1244 -(808 + 434)];v94[v119](v12(v94,v119 + 1,v96[3 + 0]));break;end end else do return;end end elseif ((1443>((4744 -2661) -817)) and (v97==(2 + 0))) then v94[v96[7 -5]]=v94[v96[784 -(30 + 751)]][v96[12 -8]];else v68=v96[3 + 0];end elseif ((2418<=(4778 -(10 + 4))) and (v97<=(4 + 1))) then if ((v97>4) or ((6777 -3590)>=(439 + 4061))) then v94[v96[3 -1]]=v36[v96[1 + 2]];else v94[v96[3 -1]]();end elseif ((v97==(12 -6)) or ((1299 + 300 + 1268)==(817 -(10 + 17)))) then if (((1127 -603)<(1950 + 1410)) and (v94[v96[6 -4]]==v96[872 -(289 + 579)])) then v68=v68 + 1 + 0;else v68=v96[3];end else v94[v96[193 -(139 + 52)]]=v96[9 -6];end elseif (((2634 -((3226 -1900) + 423))<=((5438 -(404 + 1397)) -2273)) and (v97<=11)) then if ((1<=3944) and (v97<=9)) then if (((1181 -(66 + 61))<(5193 -(488 + 342))) and (v97==(1642 -(1320 + 314)))) then local v123=0;local v124;local v125;local v126;local v127;local v128;while true do if (((3890 -(449 + 57))>(173 + 1681)) and (v123==(1631 -(139 + 1491)))) then local v143=0;while true do if (((3866 + 278)>2571) and ((1 -0)==v143)) then v123=2;break;end if ((v143==0) or ((1756 + 53)<=(349 + 380))) then v126=nil;v127=nil;v143=1;end end end if (((4477 -(435 + 376))<(5437 -(1636 + 17))) and (v123==(0 + 0 + 0))) then local v144=739 -(222 + 517);while true do if (((1607 -(124 + 29))==(936 + (956 -438))) and (v144==0)) then v124=0 -(0 -0);v125=nil;v144=1184 -(430 + 753);end if (((2489 -833)<=(6518 -(1020 + 741))) and (v144==((324 -(296 + 27)) + 0))) then v123=1;break;end end end if (((4771 -(327 + 320))>(1171 -((527 -298) + 367))) and (v123==(1662 -(489 + (4240 -3069))))) then v128=nil;while true do if ((v124==2) or ((12261 -8832)<(10039 -6689))) then for v162=v125,v69 do local v163=695 -(272 + 423);while true do if (((20706 -16503)>1845) and ((0 + 0)==v163)) then v128=v128 + (1076 -(269 + 806));v94[v162]=v126[v128];break;end end end break;end if ((v124==(0 + 0)) or ((3880 + 111 + 557)<(3503 + 672))) then local v153=0;local v154;while true do if (((0 -0)==v153) or (4739==(922 + 883))) then v154=0 -0;while true do if (((4664 -(125 + 1442))<3869) and (v154==(2 -1))) then v124=1195 -(302 + 892);break;end if ((v154==0) or ((2111 -(792 + 36))==(5960 -(594 + 1151)))) then local v175=0;while true do if ((v175==(0 + 0)) or ((1417 -(698 + 87 + 38))==184)) then v125=v96[2 + 0];v126,v127=v91(v94[v125](v12(v94,v125 + 1 + 0,v96[3])));v175=1;end if ((v175==(2 -1)) or (959>=(3075 + 74 + 68))) then v154=494 -(408 + 85);break;end end end end break;end end end if ((v124==(1 + 0 + 0 + 0)) or ((1747 -(191 + 55 + 568))==(7202 -4841))) then local v155=0 -(0 + 0);local v156;while true do if ((v155==0) or (2622<(3504 -1463))) then v156=0;while true do if ((v156==(3 -2)) or ((3167 -(1581 + 253))>(1975 + 160))) then v124=2;break;end if ((v156==(0 + 0)) or ((1827 -1108)>(2614 -(77 + 783)))) then local v176=1385 -(273 + 804 + 308);while true do if ((4921==(1901 + 3020)) and (v176==((1949 -(404 + 1545)) -0))) then v69=(v127 + v125) -(1 + 0);v128=(59 + 296) -(45 + 310);v176=3 -2;end if ((v176==(1 + 0)) or ((2656 -(1034 + 652))>=((5342 -1776) + (751 -446)))) then v156=1 + 0;break;end end end end break;end end end end break;end end else v94[v96[6 -4]]=v28(v89[v96[1313 -(667 + 643)]],nil,v36);end elseif ((v97>(5 + 3 + 2)) or ((7457 -3606)>(6278 -(1399 + 324)))) then local v130=1880 -(104 + 1776);local v131;local v132;while true do if (((1926 -(19 + 4))==(3250 -(648 + 699))) and (v130==1)) then while true do if ((4627>2071) and (v131==0)) then v132=v96[8 -6];v94[v132]=v94[v132]();break;end end break;end if (((0 -0)==v130) or ((207 -144)<=59)) then v131=0 -0;v132=nil;v130=1;end end else v94[v96[(2992 -(550 + 1316)) -(1029 + 95)]]=v94[v96[1289 -(1183 + 103)]];end elseif ((v97<=(243 -(150 + 80))) or ((2454 -1538)>=(2084 + 1953))) then if (((254 + 220)<(4708 -(203 + 969))) and (v97>(5 + 7))) then if (((78 -56)==(54 -32)) and (v96[2]==v94[v96[2 + 2]])) then v68=v68 + 1;else v68=v96[6 -3];end else local v134=0 -0;local v135;local v136;while true do if ((v134==(1001 -(664 + 336))) or (((8552 -(1398 + 506)) -(1360 + 596))<=(2358 -725))) then while true do if (((1995 + 38)==2033) and (v135==(0 + 0))) then v136=v96[154 -(107 + 45)];v94[v136]=v94[v136](v12(v94,v136 + (1 -0),v69));break;end end break;end if ((v134==(1278 -(439 + 839))) or ((3181 + 1296)<((7823 -5126) -(530 + 299 + 1020)))) then v135=1402 -(479 + 923);v136=nil;v134=1 + 0;end end end elseif (((10705 -6214)==(17407 -12916)) and (v97<=(28 -14))) then local v137=1407 -(384 + 1023);local v138;local v139;local v140;while true do if ((v137==(0 -0)) or ((1604 -(202 + 1243))>=919)) then v138=200 -((51 -10) + 159);v139=nil;v137=1 + 0;end if (((355 + 4076)>((185 + 2015) -1404)) and (v137==((2 -1) + 0))) then v140=nil;while true do if (((4066 -(877 + 313))<4354) and (v138==(1 + 0))) then v94[v139 + 1]=v140;v94[v139]=v140[v96[1038 -(357 + 677)]];break;end if ((4796==4796) and (v138==(1201 -(765 + 436)))) then local v161=0;while true do if (((4360 + 345 + 167)==(21211 -16339)) and (v161==(0 -0))) then v139=v96[4 -2];v140=v94[v96[1 + 2]];v161=1;end if (((1052 -(543 + 508))==v161) or ((6370 -((3090 -1373) + 175))<=(1072 + 896))) then v138=(2305 -(377 + 306)) -(206 + 1415);break;end end end end break;end end elseif ((((17705 -8723) -6250)<3357) and (v97==(1295 -(642 + 0 + 638)))) then for v145=v96[1 + 1],v96[6 -3] do v94[v145]=nil;end else local v141=0;local v142;while true do if ((v141==(370 -(203 + 167))) or ((1279 + 393 + 1868)<=(1460 + 494))) then v142=v96[211 -(92 + 117)];v94[v142]=v94[v142](v12(v94,v142 + (3 -2),v96[2 + 1]));break;end end end v68=v68 + 1 + 0;break;end if (((4247 -2812)==(3518 -2083)) and ((0 -0)==v100)) then local v104=1831 -(59 + 352 + 1420);while true do if ((v104==((1300 -(583 + 717)) -0)) or (((352 -(195 + 64)) -51)>(2077 + 1966))) then v96=v87[v68];v97=v96[1 -0];v104=1586 -(936 + 649);end if ((1655<(2462 + 290)) and (v104==(1188 -(405 + 782)))) then v100=1 + (717 -(153 + 564));break;end end end end end end v67=3;end if (v67==3) then A,B=v26(v10(v72));if  not A[1] then local v98=v34[4][v68] or "?";error("Script error at ["   .. v98   .. "]:"   .. A[2]);else return v12(A,2,B);end break;end end end;end return v28(v27(),{},v16)();end vv8());end
